import pic1 from '../Assets/1.webp'
import pic2 from '../Assets/2.webp'
import pic3 from '../Assets/3.webp'
import pic4 from '../Assets/4.webp'
import pic5 from '../Assets/5.webp'
import pic6 from '../Assets/10.webp'
import pic7 from '../Assets/7.webp'
import pic8 from '../Assets/9.webp'

export const ProjectData = [
    {   id: 1,
        heading: "Bone Cancer Detection and classification using CT scans with Hardware Implementation on FPGA",
        date: "Jun 2022 - Present",
        img: pic1,
        b1: "Associated with National University of Sciences and Technology (NUST)",
        b2: "Associated with NORI Hospital",
        b3: "",
        b4: "",
        b5: "",
        b6: "",
        b7: "",
        b8: "",
        b9: "",
    },
    {   id: 2,
        heading: "Model for Self-Driving Cars using Image Segmentation with Unet",
        date: "Sep 2022 - Present",
        img: pic2,
        b1: "Uses semantic image segmentation",
        b2: "Uses CARLA self-driving car dataset",
        b3: "Apply sparse categorical crossentropy for pixelwise prediction",
        b4: "Uses a matching number of convolutions for downsampling the input image to a feature map, and transposed convolutions for upsampling those maps back up to the original input image size",
        b5: "Adds skip connections, to retain information that would otherwise become lost during encoding",
        b6: "Two parts: 1) Encoder 2) Decoder",
        b7: "Contracting path follows a regular CNN architecture, with convolutional layers, their activations, and pooling layers to downsample the image and extract its features",
        b8: "Decoder upsamples the features back to the original image size",
        b9: "Uses an equal number of convolutional blocks and transposed convolutions for downsampling and upsampling",
    },
    {   id: 3,
        heading: "Art Generation using Neural Style Transfer",
        date: "Sep 2022 - Sep 2022",
        img: pic3,
        b1: "Given a content image C and a style image S can generate an artistic image",
        b2: "Uses hidden layer activations based on a pretrained ConvNet",
        b3: "Content cost function is computed using one hidden layer's activations",
        b4: "Style cost function for one layer is computed using the Gram matrix of that layer's activations. The overall style cost function is obtained using several hidden layers.",
        b5: "Optimizing the total cost function results in synthesizing new images.",
        b6: "Optimization algorithm updates the pixel values rather than the neural network's parameters",
        b7: "",
        b8: "",
        b9: "",
    },
    {   id: 4,
        heading: "Car Detection using YOLO",
        date: "Sep 2022 - Sep 2022",
        img: pic4,
        b1: "Requires only one forward propagation pass through the network to make predictions",
        b2: "Uses non-max-suppression",
        b3: "Input image goes through a CNN, resulting in a (19,19,5,85) dimensional output",
        b4: "After flattening the last two dimensions, the output is a volume of shape (19, 19, 425)",
        b5: "Throws away boxes that have detected a class with a score less than the threshold",
        b6: "Compute the Intersection over Union and avoid selecting overlapping boxes",
        b7: "Pre-trained model was used",
        b8: "",
        b9: "",
    },
    {   id: 5,
        heading: "Face Recognition system using One-shot Learning",
        date: "Sep 2022 - Sep 2022",
        img: pic5,
        b1: "Posed face recognition as a binary classification problem",
        b2: "Implemented one-shot learning for a face recognition problem",
        b3: "Applied the triplet loss function to learn a network's parameters in the context of face recognition",
        b4: "Mapped face images into 128-dimensional encodings using a pretrained model",
        b5: "",
        b6: "",
        b7: "",
        b8: "",
        b9: "",
    },
    {   id: 6,
        heading: "Sign Language Reader using ResNet50",
        date: "Sep 2022 - Sep 2022",
        img: pic6,
        b1: "A powerful model for image classification when it's trained for an adequate number of iterations",
        b2: "Uses skip connections",
        b3: "Skip connection makes it very easy for one of the blocks to learn an identity function",
        b4: "An identity function accounts for ResNets' remarkable performance even more than skip connections help with vanishing gradients",
        b5: "IDENTITY block and CONVOLUTIONAL blocks are used",
        b6: "",
        b7: "",
        b8: "",
        b9: "",
    },
    {   id: 7,
        heading: "Face Verification System using FaceNet",
        date: "Aug 2022 - Aug 2022",
        img: pic7,
        b1: "Uses an ID card and a live picture to identify a person.",
        b2: "A 1:1 matching system.",
        b3: "Requires small dataset.",
        b4: "Encodes a face image into a vector of 128 numbers. By comparing two such vectors, you can then determine if two pictures are of the same person.",
        b5: "Compares the two images pixel-by-pixel.",
        b6: "If the distance between the raw images is below a chosen threshold, it may be the same person.",
        b7: "Uses Triplet loss function.",
        b8: "",
        b9: "",
    },
    {   id: 8,
        heading: "Quality Assurance System using Neural Networks",
        date: "Jul 2022 - Aug 2022",
        img: pic8,
        b1: "Associated with Interloop LimitedAssociated with Interloop Limited",
        b2: "Made a quality assurance system using neural networks for the garments being produced in the factory.",
        b3: "Collected data for training the model.",
        b4: "The accuracy achieved was more than 90%.",
        b5: "",
        b6: "",
        b7: "",
        b8: "",
        b9: "",
 },
]
